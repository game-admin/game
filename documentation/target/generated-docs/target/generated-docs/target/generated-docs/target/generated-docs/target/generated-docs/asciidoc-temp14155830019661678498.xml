<?xml version="1.0" encoding="UTF-8"?><?asciidoc-toc?><?asciidoc-numbered?><article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title><inlinemediaobject>
<imageobject>
<imagedata fileref="./img/doclogo2.png"/>
</imageobject>
<textobject><phrase>Logo</phrase></textobject>
</inlinemediaobject> Game</title>
<date>2020-02-22</date>
</info>
<simpara><?asciidoc-hr?></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="section-Introduction">
<title>Introduction and Goals</title>
<simpara role="introduction">The ARZ wants to establish a new way of gamificated education for the members. ARZ means "Allgemeines Rechenzentrum" and it is an IT service provider with locations in Innsbruck and Vienna. Their homepage: <link xl:href="https://www.arz.at/">https://www.arz.at/</link></simpara>
<simpara>The workers often have different knowledge about programming, so it is rather time consuming and costly to further educate them.</simpara>
<simpara>This is where the idea of "GAME" comes into play. The "GAME" is intended to be a platform on which employees can improve their programming knowledge with little games, quizzes or competitions.</simpara>
<simpara>A great focus lies on the terms "self-study" and "Gamification". Gamification means that the information is transmittetd through games to ease the learning process.</simpara>
<simpara>Furthermore there should be a possibility for trainers to bring in their own ideas, quizzes or modules. One of the goals of this diplome thesis is to motivate the people to continue their education in their free time. There should be a possibility to learn some skills without much effort.</simpara>
<simpara>Another important aspect of "GAME" is the scoring system, which will be implemented in the software. This will create transparency for employees and employers. This scoring system will be a great motivation for workers.</simpara>
<itemizedlist>
<title>The most relevant Stakeholders</title>
<listitem>
<simpara>Roland Moder</simpara>
</listitem>
<listitem>
<simpara>Konrad Renner</simpara>
</listitem>
<listitem>
<simpara>Michaela Würzl</simpara>
</listitem>
<listitem>
<simpara>Cornelia Sammer</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>The expections of the Stakeholders should be fulfilled.</simpara>
</note>
<simpara>The expectations of the stakeholders regarding the thesis are:</simpara>
<itemizedlist>
<listitem>
<simpara>sufficient documentation regarding the arc42 template</simpara>
</listitem>
<listitem>
<simpara>Fulfillment of the quality goals</simpara>
</listitem>
<listitem>
<simpara>a clear and well-functioning software</simpara>
</listitem>
<listitem>
<simpara>an easy-to-use user interface</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="section-Requirements">
<title>Requirements and Overview</title>
<itemizedlist role="requirements">
<listitem>
<simpara>create/modify a system to get a simple, easy to use education platform</simpara>
</listitem>
<listitem>
<simpara>trainers should be able to upload their own tasks and games to the platform</simpara>
</listitem>
<listitem>
<simpara>a variety of difficulty levels</simpara>
</listitem>
<listitem>
<simpara>a point system which rewards the user and lets him compare his points with other users</simpara>
</listitem>
<listitem>
<simpara>the points can also be used to rank up</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="section-Qualitygoals">
<title>Qualitygoals</title>
<table colsep="1" frame="all" role="qualitygoals" rowsep="1">
<title>Quality Goals</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>System ready and usability</simpara></entry>
<entry align="left" valign="top"><simpara>The goal of this project is to create or modify a system to get a learning platform for the ARZ members. So the most important quality goal is the completion of the system because there cannot be any other features if the basic system does not exist. Also the system should be easy to use/understand and should not have flaws in it.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>The point system</simpara></entry>
<entry align="left" valign="top"><simpara>One of the most important goals of the education platform is to implement a point system for the users. The point system rewards the ARZ members and the users should be able to compare their points with each other. This will boost the motivation of the learners to educate themselves even more, by for example trying to reach certain points.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Trainers can upload games and tasks</simpara></entry>
<entry align="left" valign="top"><simpara>Another feature should be the possibility for selected trainers to upload their own tasks and games for the users of the education platform. This should be the foundation to never run out of new games and tasks.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Up to date documentation is released with every update of the system</simpara></entry>
<entry align="left" valign="top"><simpara>The documentation of the whole project is another goal which is very important for the sucessfull completion. It should be without grammar or writing errors and should have an overall good looking format.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="section-Stakeholders">
<title>Stakeholders</title>
<itemizedlist role="stakeholders">
<listitem>
<simpara><emphasis role="strong">Thesis supervisor</emphasis> (contractor side)<emphasis role="strong">:</emphasis> Roland Moder <link xl:href="mailto:roland.moder@aon.at">roland.moder@aon.at</link></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Thesis supervisor</emphasis> (client side)<emphasis role="strong">:</emphasis> Konrad Renner <link xl:href="mailto:konrad.renner@arz.at">konrad.renner@arz.at</link></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Human resource development:</emphasis> Michaela Würzl <link xl:href="mailto:michaela.wuerzl@arz.at">michaela.wuerzl@arz.at</link>,
Cornelia Sammer <link xl:href="mailto:cornelia.sammer@arz.at">cornelia.sammer@arz.at</link></simpara>
</listitem>
</itemizedlist>
<simpara><emphasis role="strong"><emphasis>Expectations</emphasis></emphasis>:</simpara>
<simpara><u>Roland Moder</u>:<?asciidoc-br?>
He expects the diploma thesis to run smoothly and be completed within a reasonable time, this means it has to be completed by the end of April. Additionally, the diploma students should fulfill the requirements for a diploma thesis. Furthermore, there should be a sufficient documentation of the work done.</simpara>
<simpara><u>Konrad Renner</u>:<?asciidoc-br?>
He expects the software to contain a scoring system that records the learning progress of every member, which can be evaluated and compared. Furthermore, he expects to be able to mantain the tasks independently, this means if all tasks have been fulfilled on the platform, there should be an opportunity for coaches to be able to put in new tasks.</simpara>
<simpara><u>Michaela Würzl and Cornelia Sammer</u>:<?asciidoc-br?>
They expect a timely completion of the project, so that the concept is completed by 31.12.2019, and the implementation should be completed by the end of April. Moreover, the software should be utilizable and integrable, this means the user interface should be easy to use for employees, trainers and moderators.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="section-SystemScopeandContext">
<title>System, Scope and Context</title>
<section role="System_Scope_and_Context" xml:id="_technical_context">
<title>Technical Context</title>
<simpara>The technical context describes interfaces linking the system to its environment.</simpara>
<simpara>The abstract technical context is shown by the following C4-Context Model:</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="img/c4_context.png"/>
</imageobject>
<textobject><phrase>C4-Context Model</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>The GAME system is precisely described through this C4-Container Model:</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="img/c4_container.png"/>
</imageobject>
<textobject><phrase>C4-Container Model</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
<section xml:id="_description">
<title>Description</title>
<simpara>The game system communicates with the following systems:</simpara>
<itemizedlist>
<listitem>
<simpara>Skill / SAP employee management system</simpara>
<itemizedlist>
<listitem>
<simpara>This system transmits the current progress of the employees to the GAME System and vice versa.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>training system "SkillA"</simpara>
<itemizedlist>
<listitem>
<simpara>This system transfers progress from the "SkillA" training system to the GAME system.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_considerations">
<title>Considerations</title>
<simpara>In the point system several difficulty levels are defined which reward the user with previously determined points.</simpara>
<simpara>The trainer has to give every module he created a certain difficulty level.</simpara>
<simpara>In the beginning it should be possible to manually enter the progresses of trainees from "SkillA" in the progress system.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="section-solution-strategy">
<title>Solution Strategy</title>
<section xml:id="_building_from_scratch">
<title>Building from Scratch</title>
<simpara>The key decision of this project is the settlement to program the system from scratch, since there is no suitable, open-source platform which can be used for our purpose. Which systems were examined are written in <link xl:href="../decisions/ADR001-BuildingFromScratch.adoc">Building from Scratch</link>.</simpara>
</section>
<section xml:id="_programming_language">
<title>Programming Language</title>
<simpara>The programming language we will use throughout this project is the highly acknowledged Java programming language. For in depth view of technology decisions please have a look in  <link linkend="id_designdecisions">Design Decisions</link>.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="section-Design-Decisions">
<title>Design Decisions</title>
<simpara role="design_decisions">This chapter includes all decisions, the diploma team had to make. The following decisions are written in the <link xl:href="https://adr.github.io/">Lightweight Architecture Decision Records</link>-format.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_adr001_buildingfromscratch">
<title>ADR001-BuildingFromScratch</title>
<section xml:id="_status">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context">
<title>Context</title>
<simpara>The ARZ wants to create a learning platform for their members. The project team evaluated possibly alternatives to adapt from. An alternative needs to be able to run on-premise, be up to date with todays standards and preferably be opensource. The evaluated systems are the following:</simpara>
<simpara><link xl:href="http://www.javaranch.com">http://www.javaranch.com</link></simpara>
<itemizedlist>
<listitem>
<simpara>is based on "JForum" (a java forum)</simpara>
</listitem>
<listitem>
<simpara>OpenSource</simpara>
</listitem>
<listitem>
<simpara>Code is on SourceForge</simpara>
<literallayout class="monospaced">-&gt; doesn't meet the expectations</literallayout>
</listitem>
</itemizedlist>
<simpara><link xl:href="http://www.skill-guru.com">http://www.skill-guru.com</link></simpara>
<itemizedlist>
<listitem>
<simpara>no On-premise possible</simpara>
<literallayout class="monospaced">-&gt; therefore  excluded</literallayout>
</listitem>
</itemizedlist>
<simpara><link xl:href="http://www.betterprogrammer.com">http://www.betterprogrammer.com</link></simpara>
<itemizedlist>
<listitem>
<simpara>no further development, outdated (java version 1.5/1.6)</simpara>
<literallayout class="monospaced">-&gt; therefore not effective</literallayout>
</listitem>
</itemizedlist>
<simpara><link xl:href="http://www.javapassion.com">http://www.javapassion.com</link></simpara>
<itemizedlist>
<listitem>
<simpara>no possibility for extensions</simpara>
</listitem>
<listitem>
<simpara>developed by an individual person</simpara>
<literallayout class="monospaced">-&gt; therefore no viable option</literallayout>
</listitem>
</itemizedlist>
</section>
<section xml:id="_decision">
<title>Decision</title>
<simpara>None of the evaluated systems meet the requirements, so the system will be build up from scratch by the project team.</simpara>
</section>
<section xml:id="_consequences">
<title>Consequences</title>
<simpara>Development of a web application based on Java/Java Enterprise.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr002_technology_stack">
<title>ADR002-Technology stack</title>
<section xml:id="_status_2">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_2">
<title>Context</title>
<simpara>The GAME application consists of different subsystems. To make it possible, that these subsystems are maintainable in the context of the whole application, it is important that these subsystems are based on the same base technology stack.</simpara>
</section>
<section xml:id="_decision_2">
<title>Decision</title>
<simpara>The GAME application and its subsystems are developed with the help of the <link xl:href="https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition">Java EE</link> technology stack. The Java EE technology is a proven technology which is standardised and offers therefore highest future-proofness.</simpara>
</section>
<section xml:id="_consequences_2">
<title>Consequences</title>
<simpara>The GAME application uses Java EE in version 8 and is developed as application server neutral as possible. Version 8 is the latest production ready version of the plattform and therefore it is the version of choice for developing Java EE applications.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr003_build_and_dependency_managament">
<title>ADR003-Build and dependency managament</title>
<section xml:id="_status_3">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_3">
<title>Context</title>
<simpara>The GAME application consists of different subsystems. To make it possible, that these subsystems can be automatically built and bundled a build and dependency management tool ist needed.</simpara>
</section>
<section xml:id="_decision_3">
<title>Decision</title>
<simpara><link xl:href="https://maven.apache.org/">Apache Maven</link> will be used for build and dependency management. This tool is well-proven and can be extended with many plugins. Its convention-over-configuration paradigma lets a developer focus on creating the software.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr004_ui_technology_stack">
<title>ADR004-UI technology stack</title>
<section xml:id="_status_4">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_4">
<title>Context</title>
<simpara>The primary user interface of the GAME application will be web based. Therefore a web UI Toolkit is needed for an efficient development of the UI and seamless integration with the backend systems.</simpara>
</section>
<section xml:id="_decision_4">
<title>Decision</title>
<simpara>As described in <link xl:href="ADR002-Technologystack.adoc">ADR002-Technology stack</link> Java EE is the base technology stack for the GAME application. The Java EE standard defines the JSF substandard as its UI Framework/Toolkit for web based applications. Therefore the web based UI of the GAME application will be developed with the JSF framework.</simpara>
</section>
<section xml:id="_consequences_3">
<title>Consequences</title>
<simpara>For some parts of a modern web based UI, the JSF framework doesn’t have components to develop the UI efficient. For these parts it is allowed to use components of the <link xl:href="https://www.primefaces.org/">Primefaces</link> UI library.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr005_communication_with_distributed_systems">
<title>ADR005-Communication with distributed systems</title>
<section xml:id="_status_5">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_5">
<title>Context</title>
<simpara>The GAME application must be able to communicate with other distributed systems in both directions (inbound and outbound).</simpara>
</section>
<section xml:id="_decision_5">
<title>Decision</title>
<simpara>The GAME application will provide resources for other distributed systems via <link xl:href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful webservices</link>.</simpara>
<simpara>By using a stateless protocol (<link xl:href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">HTTP</link>) and standard operations, RESTful systems aim for fast performance, reliability, and the ability to grow by reusing components that can be managed and updated without affecting the system as a whole, even while it is running.
It is also evolving as the defacto standard for communication between distributed systems in the digital age.</simpara>
</section>
<section xml:id="_consequences_4">
<title>Consequences</title>
<simpara>JAX-RS is the standard for creating RESTful Webservices in Java EE based applications and so it will be used in the GAME application.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr006_database">
<title>ADR006-Database</title>
<section xml:id="_status_6">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_6">
<title>Context</title>
<simpara>For persistent storage of data in the GAME application a database system is needed.</simpara>
</section>
<section xml:id="_decision_6">
<title>Decision</title>
<simpara>The <link xl:href="https://www.postgresql.org/">PostgreSQL</link> database will be used as the default database system in the GAME application.</simpara>
<simpara>PostgreSQL comes with many features aimed to help developers build applications, administrators to protect data integrity and build fault-tolerant environments, and help you manage your data no matter how big or small the dataset. In addition to being free and open source, PostgreSQL is highly extensible.
It’s worth mentioning that PostgreSQL also supports many NoSQL features as well.</simpara>
</section>
<section xml:id="_consequences_5">
<title>Consequences</title>
<simpara>PostgreSQL is defined as the default database of the application, but database accesses must be as SQL standard compliant as possible, so that the portability of the application is still warranted.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr007_java_ee_application_server">
<title>ADR007-Java EE application server</title>
<section xml:id="_status_7">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_7">
<title>Context</title>
<simpara>Applications which are implemented on top of the Java EE specification, which is defined as the base technology of the GAME application in the link:ADR002-Technology stack.adoc[ADR002-Technology stack], need an application server as runtime environment.</simpara>
</section>
<section xml:id="_decision_7">
<title>Decision</title>
<simpara>The <link xl:href="https://wildfly.org/">Wildfly application server</link> will be used as the default application server in the GAME application.</simpara>
<simpara>The Wildfly application is open source and has full support for the Java EE 8 specification. It is also widely used in the ARZ and therefore the medium of choice.</simpara>
</section>
<section xml:id="_consequences_6">
<title>Consequences</title>
<simpara>Wildfly is defined as the default application server of the application, but the application must be as Java EE standard compliant as possible, so that the portability of the application is still warranted.
Further it must be possible to run the application also on application servers which are just Java EE Web Proile compliant.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_adr008_standard_code_formatter">
<title>ADR008-Standard code formatter</title>
<section xml:id="_status_8">
<title>Status</title>
<simpara>accpeted</simpara>
</section>
<section xml:id="_context_8">
<title>Context</title>
<simpara>For seamless working together on a shared code base it is advantageous to use the same code formatter. So a standard code formatter must be defined.</simpara>
</section>
<section xml:id="_decision_8">
<title>Decision</title>
<simpara>The standard code format is defined in the file <link xl:href="formatter.xml">formatter.xml</link>. This XML is created as an <link xl:href="https://www.eclipse.org/">eclipse</link>-Formatter file, but can also be importet in other IDEs, such as Apache Netbeans or IntelliJ Idea.</simpara>
</section>
<section xml:id="_consequences_7">
<title>Consequences</title>
<simpara>Everyone who creates or changes source code for the GAME application in this repository, must use this formatter setup to format the source code.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="diagrams/diagram-classes.png"/>
</imageobject>
<textobject><phrase>diagram classes</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_theoretische_aufgabenstellung_eric_haneder">
<title>Theoretische Aufgabenstellung: Eric Haneder</title>

</section>
<section xml:id="_lernen_lerntypen_lernstile_lernpräferenzen_und_selbstreguliertes_lernen">
<title>(Lernen,) Lerntypen, Lernstile, Lernpräferenzen und selbstreguliertes Lernen</title>
<section xml:id="_lernen">
<title>Lernen</title>
<simpara>Everyone has to learn, both actively and passively. Whether at school or in professional life, further education is part of the essence of man. The term "learning" usually means the acquisition of knowledge, the development of skills or the practice of motor processes. However, "learning" also refers to activities that are carried out with the aim of changing internal conditions.</simpara>
<simpara><emphasis>(vgl. Selbstreguliertes Lernen in der dualen Ausbildung - Lerntypen und Bedingungen, Johannes Rosendahl, 2010)</emphasis></simpara>
<simpara>There are many people who have tried to explain the process behind learning, or to classify different learning preferences and learning types. I will discuss these classifications in more detail below.</simpara>
</section>
<section xml:id="_learning_type_classification_according_to_vester">
<title>Learning type classification according to Vester</title>
<simpara>In the book "Denken, Lernen, Vergessen. Was geht in unserem Kopf vor, wie lernt das Gehirn und wann lässt es uns im Stich?" (1975, Stuttgart), Frederick Vester defined four types of learning. However, his book was interpreted differently, so that different versions of his classification can be found. At least on the fact that there is an auditory, a visual and a haptic learning type, there is agreement. Though there are some people who think that the fourth learning type after Frederik Vester is the communicative learning type and others think that it is an intellectual learning type.</simpara>
<note>
<simpara>One also comes across terms like "cognitive learning type" ≙ "intellectual learning type", or the "kinesthetic learning type" ≙ "haptic learning type.</simpara>
</note>
<formalpara>
<title>Evidence for a classification according to Vester with a "communicative learning type"</title>
<para>
<literallayout class="monospaced">https://www.teko.ch/die-vier-lerntypen-und-ihre-besonderheiten;
https://www.mystipendium.de/studium/lerntypen;
https://karrierebibel.de/lerntypentest/#Die-vier-Lerntypen-angelehnt-an-Frederic-Vester;
https://learnsolution.de/die-vier-lerntypen-nach-frederic-vester/;</literallayout>
</para>
</formalpara>
<formalpara>
<title>Evidence for a classification to Vester with an "intellectual learning type""</title>
<para>
<literallayout class="monospaced">http://www.rechtschreibwerkstatt-konzept.de/wp-content/uploads/2015/02/Looss_Lerntypen.pdf;
https://wb-web.de/wissen/lehren-lernen/lernstile-und-lerntypen.html;
https://smarter-learning.de/lerntypen/klassische-lerntypen-nach-vester/;
https://wissenschafts-thurm.de/lerntypen/;
"Erforschung der Lerntypen und -strategien am Beispiel einer Handelsschulklasse", Petra Hochleitner, 2016</literallayout>
</para>
</formalpara>
<simpara>I will be analyzing this classification according to Vester:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>optical/visual → Learning through seeing and observing</simpara>
</listitem>
<listitem>
<simpara>auditory/acoustically → Learning through listening and speaking</simpara>
</listitem>
<listitem>
<simpara>haptisch → Learning through action (touching and feeling)</simpara>
</listitem>
<listitem>
<simpara>cognitive → Learning through recognition/intellect</simpara>
</listitem>
</orderedlist>
<section xml:id="_auditory_learning_type">
<title>Auditory learning type</title>
<simpara>The auditory learning type learns while using his hearing. He/She has no problem listening to someone over long periods of time. The auditive type prefers auditioned learning content and learns better if he/she reads the text aloud himself/herself.</simpara>
</section>
<section xml:id="_visual_learning_type">
<title>Visual learning type</title>
<simpara>This learning type learns the best, when he takes up the learning content through his eyes. Reading texts will lead to great learning achievements. This gets a better unterstanding of facts through looking at pictures.</simpara>
</section>
<section xml:id="_haptic_learning_type">
<title>Haptic learning type</title>
<simpara>The haptic learning type achieves the best learning succes if he cant feel the information he has to learn.
"Learning by Doing" describes this lerning method pretty good. He prefers to be actively integrated into the learning process. Practical demonstrations are helpful too.</simpara>
</section>
<section xml:id="_cognitiveintellectual_learning_type">
<title>Cognitive/Intellectual learning type</title>
<simpara>This learning type understands and saves information the best, by thinking about and critically examining the information. The perception channel not important for taking up learning content.</simpara>
<simpara><emphasis>(vgl."https://smarter-learning.de/lerntypen/klassische-lerntypen-nach-vester/"; letzter Zugriff: 14.01.2020)</emphasis></simpara>
</section>
<section xml:id="_connections">
<title>Connections</title>
<simpara>Most of the time, it is not possible to assign someone a certain learning type, as there mix-types of learning. There are some people who learn faster by reading through text and writing it down afterwards (visual &amp; haptic), and others are better of learning by reading and reciting out lout (auditory &amp; haptic).</simpara>
<simpara>So if you want to learn effectively, you should try to appeal to more than one sense,  to find a combination that fits your style.</simpara>
<simpara><emphasis role="strong">How are different types of learning formed?</emphasis>
It would be a lot easier, if everybody could learn the same way. In reality, there a many people with different learning types, this is due to cnahges in personal characteristics, habits and previous experiences.</simpara>
<simpara><emphasis role="strong">So how can you find out which learning type suits you best?</emphasis></simpara>
<simpara>On the Internet you can find many so-called "learning type tests". In these tests, u have to answer a few simple questions, that depict typical life situations. Here are two hyperlinks, which lead to easy tests:
* <link xl:href="http://arbeitsblaetter.stangl-taller.at/TEST/HALB/Test.shtml">http://arbeitsblaetter.stangl-taller.at/TEST/HALB/Test.shtml</link>
* <link xl:href="http://www.philognosie.net/index.php/tests/testsview/150/">http://www.philognosie.net/index.php/tests/testsview/150/</link></simpara>
<simpara>After completing one of these tests, you will receive a recommendation as to which type of learner is more suitable for you.</simpara>
<note>
<simpara>It should be noted that different tests can also lead to different recommendations. This is due to the fact that the tests have different focuses and are more or less comprehensive.</simpara>
</note>
<simpara>If you do not want to take such tests, you can just look up different well-approved learning methods and try them yourself. Check how good you can remember something while using all of the different learning methods either alone or combined.</simpara>
<simpara><emphasis>(vgl. "Erforschung der Lerntypen und -strategien am Beispiel einer Handelsschulklasse", Petra Hochleitner, 2016)</emphasis></simpara>
</section>
</section>
<section xml:id="_learning_preferences_according_to_dunn">
<title>Learning preferences according to Dunn</title>
<simpara>Dunn and Price (1989) defined learning style as a typical way of learning that is influenced by different elements of the environment. This regards:</simpara>
<itemizedlist>
<listitem>
<simpara>physical stimuli (light, sound, temperature, design)</simpara>
</listitem>
<listitem>
<simpara>social stimuli (pairs, peers, adults, groups)</simpara>
</listitem>
<listitem>
<simpara>stimuli of learning material (auditiv, visuell, taktil, kinästhetisch)</simpara>
</listitem>
<listitem>
<simpara>emotional stimuli (responsibility, persistence, motivation, disciplin)</simpara>
</listitem>
</itemizedlist>
<simpara>These factors are measured by the "Learning Styles Inventory". However, this model takes little account of the actual cognitive processes that play a role in learning.</simpara>
<simpara><emphasis>(vgl. "Lernorientierungen, Lernstile, Lerntypen und kognitive Stile", Ulrike Creß, in "Handbuch Lernstrategien" von Heinz Mandl &amp; Helmut Felix Friedrich, S.373)</emphasis></simpara>
</section>
<section xml:id="_learning_styles_according_to_pask">
<title>Learning styles according to Pask</title>
<simpara>Around 1972, Pask and Scott identified two opposing learning strategies used in problem-solving tasks where people had to search for information independently.They described the consistend usage of these strategies as a learning style.
The holistic strategy means that learners always keep the big picture in mind and only turn to detailed questions in a second step. If this strategy is applied consistently, Pask speaks of the learning style of comprehension learning. On the other hand, learners with a serial strategy work their way step by step through the learning material and primarily turn to individual questions. If this strategy is used consistently, Park speaks of operation learning. Both strategies can lead to the same success. In their extreme form, however, both have a negative effect on performance, which is why Pask assigns both learning styles to corresponding learning pathologies. <emphasis>Globetrotting</emphasis> refers to the learning pathology of extreme comprehension learning, in which learners make inadmissible generalizations without the corresponding individual analysis. <emphasis>Improvidence</emphasis> describes the extreme form of operation learning, in which people lose themselves in details without being able to connect them to a big picture. Since the differences between holistic and serial approaches affect not only learning behaviour but the entire way in which information is sought and processed, they are often interpreted as cognitive styles.</simpara>
<simpara><emphasis>(vgl."Lernorientierungen, Lernstile, Lerntypen und kognitive Stile", Ulrike Creß, in "Handbuch Lernstrategien" von Heinz Mandl &amp; Helmut Felix Friedrich, S.369)</emphasis></simpara>
</section>
<section xml:id="_learning_styles_according_to_kolb">
<title>Learning styles according to Kolb</title>
<simpara>In 1984 David Kolb took a completely different approach to classifying learning types. According to Kolb, the learning process is based on two orthogonal bipolar dimensions. The first dimension depicts how people perceive and collect information. Persons can perceive via the senses through practical experience or through abstract comprehension. The second dimension represents the way information is processed. It ranges from active trying to mental observation.
(orthogonal → two straight lines are called orthogonal if they enclose a 90 degree angle)
The following figure shows the dimensions:</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="img/dimensions.png"/>
</imageobject>
<textobject><phrase>Learning styles according to Kolb</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Quelle (<link xl:href="https://selfdirectedlearning.webnode.es/learning-styles-by-kolb/">https://selfdirectedlearning.webnode.es/learning-styles-by-kolb/</link>; letzter Zugriff 28.01.2020)</simpara>
<simpara>Kolb presents four learning styles defined by the four quadrants that result from these orthogonal dimensions.</simpara>
<simpara><emphasis>Convergers</emphasis> explore their environment through active probing and process information in an abstract way. They are therefore interested in testing their theories and solving problems deductively.</simpara>
<simpara><emphasis>Divergers</emphasis> combine mental observation with practical experience. This often leads them to creative solutions.</simpara>
<simpara><emphasis>Assimilators</emphasis> connect abstract comprehension with mental observation. They are therefore mainly interested in developing abstract theories and defining problems, less in solving concrete problems.</simpara>
<simpara><emphasis>Accomodators</emphasis> combine active experimentation with concrete experience. They prefer casual learning directly from the situation. The learning style of a person is measured by Kolbs' Learning Style Inventory (KLSI).</simpara>
<simpara>Kolb’s approach is by far the most frequently cited of the approaches for recording learning styles.</simpara>
<simpara><emphasis>(vgl. "Lernorientierungen, Lernstile, Lerntypen und kognitive Stile", Ulrike Creß, in "Handbuch Lernstrategien" von Heinz Mandl &amp; Helmut Felix Friedrich, S.371-372)</emphasis></simpara>
</section>
<section xml:id="_selbstreguliertes_lernen">
<title>Selbstreguliertes Lernen</title>
<simpara>The concept of self-regulated learning is neither a precisely scientifically defined term nor a uniformly used term in everyday language. Furthermore, the terms self-regulated learning, self-directed learning, learner control can hardly be defined clearly.</simpara>
<simpara>Niegemann and Hofer (1997) or Büser (2003) define that in self-directed learning, in contrast to self-directed or self-regulated learning, the learning goal is determined by the person himself. Other authors, on the other hand, see the decision on learning goals explicitly as a component of self-directed or self-regulated learning (Arnold &amp; Gomez-Tutor 2006; Dehnbostel 2003; Lang &amp; Pätzold 2006; Neber 1978; Schreiber 1998, S. 45).</simpara>
<simpara><emphasis>(vgl. Selbstreguliertes Lernen in der dualen Ausbildung - Lerntypen und Bedingungen, Johannes Rosendahl, 2010)</emphasis></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_praktische_aufgabenstellung_eric_haneder">
<title>Praktische Aufgabenstellung: Eric Haneder</title>

</section>
<section xml:id="_front_end_design_und_graphic_user_interface">
<title>Front End: Design und Graphic User Interface</title>
<section xml:id="_beginning">
<title>Beginning</title>
<simpara>Nachdem die Technologie festgelegt war, mit der die Website programmiert werden sollte, konnten wir anfangen.
Zuerst muss aber mit dem Auftraggeber ein Design abgeklärt werden, welches ihm zusagt, und für uns umsetzbar ist.</simpara>
<simpara>Hier ist ein abstraktes Diagramm der User-Interfaces:
&lt;Bild einfügen&gt;</simpara>
<simpara>Nachdem auch das Design abgeklärt war, konnte nun die Erstellung der Interfaces beginnen.</simpara>
</section>
<section xml:id="_grundlagen">
<title>Grundlagen</title>
<simpara>Um eine Website zu programmieren, benötigt man ein Menge an umfangreichen Wissen. Man muss html, javascript und css beherschen. Darüber hinaus sollte man auch wissen, wie aus dem Code eine fertige Seite erzeugt wird, und wie Requests vom User ausgewertet und darauf geantwortet werden kann.</simpara>
<section xml:id="_html">
<title>HTML</title>
<simpara>Hypertext Markup Language (HTML) is the common used language for building web pages. A HTML page is a text document (with a .html or .htm extension) used by browsers to present text and graphics. A web page is made of content, tags to change some aspects of the content, and external objects such as images, videos, JavaScript, or CSS files.</simpara>
<formalpara>
<title>Beispielcode für eine html page</title>
<para>
<programlisting language="html" linenumbering="unnumbered">&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;My Webpage&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;This is my webpage&lt;/h1&gt;
        &lt;p&gt;
            I hope you like it.
        &lt;/p&gt;
        &lt;a href="www.google.at"&gt;Link to Google&lt;/a&gt;
    &lt;/body&gt;
&lt;/html&gt;</programlisting>
</para>
</formalpara>
<note>
<simpara>U can notice several tags in this code (such as &lt;body&gt; or &lt;p&gt;). Every tag has its on purpose, attributes and must be closed. Href is an attribute of the a-tag.</simpara>
</note>
<simpara>XHTML is just a validated version of html. This means, that there are certain rules, a html-page has to follow, to be valid. XHMTL pages have a .xhtml extension.</simpara>
<simpara>Some of the rules are the following:</simpara>
<itemizedlist>
<listitem>
<simpara>All tags must be closed. (so no &lt;br&gt;, &lt;hr&gt;, …​)</simpara>
</listitem>
<listitem>
<simpara>All tags are lowercase.</simpara>
</listitem>
<listitem>
<simpara>Attributes appear appear between single or double quotes (&lt;table border="0"&gt; instead of &lt;table border = 0&gt;)</simpara>
</listitem>
<listitem>
<simpara>There must be a strict structure with &lt;html&gt;, &lt;head&gt; and &lt;body&gt; tags.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_css">
<title>CSS</title>
<simpara>Cascading Style Sheets (CSS) is a styling language used to describe the presentation of a document written in html or xhtml. CSS is used to define colors, fonts layouts, and other aspects of document presentation.It allows separation of a document’s content (written in XHTML) from its presentation (written in CSS).
To embedd a .css file in your html or xhtml page, use the &lt;link&gt; tag.
(e.g. &lt;link rel="stylesheet" type="text/css" ?</simpara>
<formalpara>
<title>Your css file could look like this:</title>
<para>
<programlisting language="css" linenumbering="unnumbered">p {
    font-size: 10px;
}
h1 {
    color: red;
    font-style: italic;
}</programlisting>
</para>
</formalpara>
</section>
</section>
<section xml:id="_getting_started">
<title>Getting Started</title>
<section xml:id="_projektstruktur_erstellen">
<title>Projektstruktur erstellen</title>
<simpara>Um mit dem Programmieren zu beginnen, muss erst eine stabile Projektstruktur gegeben sein. Dafür haben wir in NetBeans auf "Projekt erstellen" geklickt, alle benötigten Resourcen vereinbart, und mit Maven wurde dann automatisch eine passende Projektstruktur erstellt.
Nun muss man auch darauf achten, dass diese Struktur befolgt.
Java-Dateien sollten unter src\main\java abgelegt werden.
Everything regarding JSF should lie in src\main\webapp. That includes the xhtml-files, the CSS, JavaScript and Images should lie in a untergeordnetem resources folder. This is needed, for JSF to locate the resources faster.
&lt;Bild einfügen, welches die Projektstruktur zeigt&gt;</simpara>
</section>
<section xml:id="_layout_erstellen">
<title>Layout erstellen</title>
<simpara>Um die Erstellung mehrerer UIs zu vereinfachen, wird ein Layout erstellt, welches als ein Template für die Pages dient.
Dieses Layout habe ich in der mainlayout.xhtml realisiert.</simpara>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"&gt;
    &lt;h:head&gt;
        &lt;!--&lt;link href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css"
            rel="stylesheet"  type='text/css'&gt;&lt;/link&gt; --&gt;
    &lt;/h:head&gt;
    &lt;h:body&gt;
        &lt;div id="header"&gt;
            &lt;h:graphicImage library="img" name="header.png" style="width: 100%"&gt;&lt;/h:graphicImage&gt;
        &lt;/div&gt;

        &lt;ui:insert name="menubar"&gt;
            &lt;ui:include src="./faces/menubar.xhtml"&gt;&lt;/ui:include&gt;
        &lt;/ui:insert&gt;

        &lt;ui:insert name="header"&gt;
            &lt;h:outputStylesheet library="resources" name="css/stylesheet.css"&gt;&lt;/h:outputStylesheet&gt;
        &lt;/ui:insert&gt;
        &lt;br /&gt;

        &lt;ui:insert name="content"&gt;
            Content
        &lt;/ui:insert&gt;
        &lt;br /&gt;

        &lt;h:graphicImage library="img" name="footer1.jpg" style="margin: 0px 0px 0px 0px;"&gt;&lt;/h:graphicImage&gt;
    &lt;/h:body&gt;
&lt;/html&gt;</programlisting>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"&gt;
    &lt;h:head&gt;
        &lt;!--&lt;link href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css"
            rel="stylesheet"  type='text/css'&gt;&lt;/link&gt; --&gt;
        &lt;link rel="shortcut icon" type="image/x-icon" href="faces/favicon.ico" /&gt;
    &lt;/h:head&gt;
    &lt;h:body&gt;
        &lt;div id="header"&gt;
            &lt;h:graphicImage library="img" name="header.png" style="width: 100%"&gt;&lt;/h:graphicImage&gt;
        &lt;/div&gt;
        &lt;ui:insert name="menubar"&gt;
            &lt;ui:include src="./faces/menubar.xhtml"&gt;&lt;/ui:include&gt;
        &lt;/ui:insert&gt;
        &lt;ui:insert name="header"&gt;
            &lt;h:outputStylesheet library="resources" name="css/stylesheet.css"&gt;&lt;/h:outputStylesheet&gt;
        &lt;/ui:insert&gt;
        &lt;br /&gt;
        &lt;ui:insert name="content"&gt;
            Content
        &lt;/ui:insert&gt;
        &lt;br /&gt;
        &lt;h:graphicImage library="img" name="footer1.jpg" style="top:100%; margin-bottom: 0px; padding-bottom: 0px;"&gt;&lt;/h:graphicImage&gt;
    &lt;/h:body&gt;
&lt;/html&gt;</programlisting>
<simpara>&lt;Bild einfügen&gt;</simpara>
<formalpara>
<title>Erklärung</title>
<para>
<literallayout class="monospaced">Anfangs wird dem Browser die Information weitergegeben, dass es sich um eine xhtml Datei handelt. Weiters werden die Buchstaben h, ui, f und p definiert, die alle auf eine jsf-library verweisen (Diese Verweise sind nötig, damit der Browser die JSF-Tags lesen kann.
Im head wird hier keine Information definiert (!).
Im body wird eine Logo angezeigt, mit einer Überschrift daneben (&lt;h1&gt;).
Der div-tag ist nur dazu da, um einen Bereich abzugrenzen, und diesen dann mit CSS zu positionieren/formatieren.
Mit &lt;ui:insert&gt; gibt man im mainlayout Informationen an, die die Clients des Layouts individuell einbauen, oder überschreiben wollen.
&lt;h:outputStylesheet&gt; wird zum Verknüpfen der CSS-Datei verwendet.
Mit &lt;ui:include&gt; können wir Informationen einer anderen Page, in diese Page einbauen.
Im footer-Bereich werden noch Kontaktdaten angezeigt.</literallayout>
</para>
</formalpara>
</section>
</section>
<section xml:id="_user_interfaces">
<title>User-Interfaces</title>
<simpara>Die UIs liegen hier unter src\main\webapp\faces. There are 4 main pages: Activites(index.xhtml), Courses &amp; Quizes(courses.xhtml), Trainers(trainers.xhtml) and a leaderboard(leaderboard.xhtml.
Die erste zu erstellende Seite, ist die index.xhtml Seite, da diese standardmäßig vom Browser zuerst angezeigt wird, beim aufrufen der Website.
Auf der Startseite sollte der User seinen Fortschritt und seine Aktivitäten sehen.</simpara>
<formalpara>
<title>index.xhtml</title>
<para>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;ui:composition template="./../mainlayout.xhtml"
                    xmlns="http://www.w3.org/1999/xhtml"
                    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                    xmlns:f="http://java.sun.com/jsf/core"
                    xmlns:h="http://java.sun.com/jsf/html"
                    xmlns:p="http://primefaces.org/ui"&gt;

    &lt;ui:define name="header"&gt;
        &lt;title&gt;Activities&lt;/title&gt;
        &lt;h:outputStylesheet library="css" name="stylesheet.css" /&gt;
        &lt;!--&lt;link href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css"
            rel="stylesheet"  type='text/css'&gt;&lt;/link&gt; --&gt;
        &lt;link rel="shortcut icon" type="image/x-icon" href="favicon.ico" /&gt;
    &lt;/ui:define&gt;

    &lt;ui:define name="content"&gt;
        &lt;h1&gt;Activities&lt;/h1&gt;
        &lt;p&gt;
            &lt;strong&gt;User:&lt;/strong&gt; #{traineeView.trainees.get(0).name} &lt;br /&gt;
            &lt;strong&gt;Nickname:&lt;/strong&gt; #{traineeView.trainees.get(0).nickname} &lt;br/&gt;
            Progress: 50% out of 100% &lt;br /&gt;
            Badges: &lt;h:graphicImage library="img" name="#{traineeView.trainees.get(0).embleme.get(0)}"&gt;&lt;/h:graphicImage&gt;

        &lt;/p&gt;
        &lt;p&gt;
            Your score (Quiz):
            &lt;h:outputText value="#{testQuizController.score}"&gt;&lt;/h:outputText&gt; &lt;br/&gt;
            Your progress (Overall):
            &lt;h:outputText value="#{traineeGenerator.scores.get(0)}"&gt;&lt;/h:outputText&gt;
        &lt;/p&gt;
        &lt;p&gt;
            Hier sollte spezifisch zum User, dessen Aktivitäten und Fortschritt dargestellt werden.
            Weiters können hier Kurse vorgeschlagen werden.
        &lt;/p&gt;

        &lt;br /&gt;

    &lt;/ui:define&gt;
&lt;/ui:composition&gt;</programlisting>
</para>
</formalpara>
<simpara>As you can see, the index-page is using the mainlayout with the "template" attribute. We defined a individell title with &lt;ui:define&gt;. The content of this page is enclose in &lt;ui:define&gt; too.
We dont need to set a footer here, because in the template page, there is already an universal footer defined.</simpara>
<simpara>The Courses&amp;Quizes page should display a list of course the trainee can go through and a list of quizes a trainee can take. Trainers should be able to add, delete and edit quizzes.</simpara>
<formalpara>
<title>courses.xhtml</title>
<para>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

&lt;ui:composition template="./../mainlayout.xhtml"
                    xmlns="http://www.w3.org/1999/xhtml"
                    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                    xmlns:f="http://java.sun.com/jsf/core"
                    xmlns:h="http://java.sun.com/jsf/html"
                    xmlns:p="http://primefaces.org/ui"&gt;

    &lt;ui:define name="header"&gt;
        &lt;title&gt;Kurse&lt;/title&gt;
        &lt;h:outputStylesheet library="css" name="stylesheet.css" /&gt;
    &lt;/ui:define&gt;

    &lt;ui:define name="content"&gt;
        &lt;h1 align="center"&gt;Courses&lt;/h1&gt;
        &lt;p&gt;
            &lt;strong&gt;Java SE Learning Beginner Course&lt;/strong&gt; &lt;br/&gt;
            This course will give you some basic knowledge of Java SE.
            &lt;h:form&gt;
                &lt;h:commandButton action="#{kursController.takeKurs}" value="Take Course!" &gt;&lt;/h:commandButton&gt;
            &lt;/h:form&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;strong&gt;Creating a GUI with Swing&lt;/strong&gt; &lt;br/&gt;
            A comprehensive introduction to GUI creation on the Java platform.
            &lt;p:button href="https://docs.oracle.com/javase/tutorial/uiswing/index.html" value="Take Course!"&gt;&lt;/p:button&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;strong&gt;A Guide for JavaBeans&lt;/strong&gt; &lt;br/&gt;
            The Java platform's component technology.
            &lt;a href="https://docs.oracle.com/javase/tutorial/javabeans/index.html"&gt;Take Course!&lt;/a&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;strong&gt;JDBC Database Access Course&lt;/strong&gt; &lt;br/&gt;
            Introduces an API for connectivity between the Java applications and a wide range of databases and data sources.
            &lt;a href="https://docs.oracle.com/javase/tutorial/jdbc/index.html"&gt;Take Course!&lt;/a&gt;
        &lt;/p&gt;
    &lt;/ui:define&gt;
&lt;/ui:composition&gt;</programlisting>
</para>
</formalpara>
<simpara>At the the end there is a &lt;h:link&gt; tag. This is a JSF tag that resolves in to an &lt;a&gt; tag, leading to another page.
There is a link that leads to a page where you can take a quiz, and there is a link where you can create a quiz. More on that later.</simpara>
<simpara>The Trainers page should display all the trainers associated with the GAME platform. The trainees can contact these trainers if they need help.</simpara>
<formalpara>
<title>trainers.xhtml</title>
<para>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

&lt;ui:composition template="./../mainlayout.xhtml"
                    xmlns="http://www.w3.org/1999/xhtml"
                    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                    xmlns:f="http://java.sun.com/jsf/core"
                    xmlns:h="http://java.sun.com/jsf/html"
                    xmlns:p="http://primefaces.org/ui"&gt;

    &lt;ui:define name="header"&gt;
        &lt;title&gt;Trainers&lt;/title&gt;
        &lt;h:outputStylesheet library="css" name="stylesheet.css" /&gt;
    &lt;/ui:define&gt;&gt;

    &lt;ui:define name="content"&gt;
        &lt;h1 align="center"&gt;Trainers&lt;/h1&gt;
        &lt;h:form id="trainerform"&gt;
            &lt;p:carousel value="#{trainerView.trainers}" headerText="Trainers" var="trainer" itemStyle="text-align:center" responsive="true"&gt;
                &lt;p:panelGrid columns="2" style="width:100%;margin:10px 0px" columnClasses="label,value" layout="grid" styleClass="ui-panelgrid-blank"&gt;
                    &lt;f:facet name="header"&gt;
                        &lt;p:graphicImage library="img" name="trainer.jpg"/&gt;
                    &lt;/f:facet&gt;

                    &lt;h:outputText value="Name:"  /&gt;
                    &lt;h:outputText value="#{trainer.name}" /&gt;

                    &lt;h:outputText value="Role:" /&gt;
                    &lt;h:outputText value="#{trainer.role}" /&gt;

                    &lt;h:outputText value="Branch:" /&gt;
                    &lt;h:outputText value="#{trainer.branch}" /&gt;
                &lt;/p:panelGrid&gt;
            &lt;/p:carousel&gt;
        &lt;/h:form&gt;
    &lt;/ui:define&gt;
&lt;/ui:composition&gt;</programlisting>
</para>
</formalpara>
<simpara>Here we used a primefaces tag called &lt;p:carousel&gt;. This tag is used to create a carousel. The &lt;panelGrid&gt; tag is used to display data in a grid. The &lt;p:graphicImage&gt; is just like the JSF tag &lt;h:graphicImage&gt;. &lt;h:outputText&gt; is used to display text, with the function to call a Backing Bean. For easier explanation here is a picture:
Bild einfügen</simpara>
<simpara>The leaderboard page is used to diplay all the trainees with their names, nicknames, branches and scored. You should be able to sort them by all of this columns.</simpara>
<formalpara>
<title>leaderboard.xhtml</title>
<para>
<programlisting language="xhtml" linenumbering="unnumbered">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

&lt;ui:composition template="./../mainlayout.xhtml"
                    xmlns="http://www.w3.org/1999/xhtml"
                    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                    xmlns:f="http://java.sun.com/jsf/core"
                    xmlns:h="http://java.sun.com/jsf/html"
                    xmlns:p="http://primefaces.org/ui"&gt;

    &lt;ui:define name="header"&gt;
        &lt;h:outputStylesheet library="css" name="stylesheet.css" /&gt;
        &lt;title&gt;Emblemtafel&lt;/title&gt;
    &lt;/ui:define&gt;

    &lt;ui:define name="content"&gt;
        &lt;h1 align="center"&gt;Emblemtafel&lt;/h1&gt;
        &lt;p&gt;
            Hier siehst du eine Auflistung aller Trainees, mit ihren Nicknames und ihren Fortschritt.
        &lt;/p&gt;
        &lt;p:dataTable var="trainee" value="#{traineeView.trainees}"&gt;
            &lt;p:column headerText="Name"&gt;
                &lt;h:outputText value="#{trainee.name}"&gt;&lt;/h:outputText&gt;
            &lt;/p:column&gt;

            &lt;p:column headerText="Nickname"&gt;
                &lt;h:outputText value="#{trainee.nickname}"&gt;&lt;/h:outputText&gt;
            &lt;/p:column&gt;

            &lt;p:column headerText="Abteilung"&gt;
                &lt;h:outputText value="#{trainee.abteilung}"&gt;&lt;/h:outputText&gt;
            &lt;/p:column&gt;

            &lt;p:column headerText="Emblems"&gt;
                &lt;h:graphicImage library="img" name="#{trainee.embleme.get(0)}"&gt;&lt;/h:graphicImage&gt;
            &lt;/p:column&gt;
        &lt;/p:dataTable&gt;
    &lt;/ui:define&gt;
&lt;/ui:composition&gt;</programlisting>
</para>
</formalpara>
<simpara>Here we used the &lt;p:dataTable&gt; tag, which is used to display date just like in the regulare &lt;table&gt; tag. If you give it a list, it will know to diplay all elements of the list.</simpara>
</section>
<section xml:id="_java_classes">
<title>Java Classes</title>
<section xml:id="_trainer_classes">
<title>Trainer Classes</title>
<screen>.TrainerService.java
[source,java]</screen>
<simpara>/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.game.trainee.trainerview;</simpara>
<simpara>import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.enterprise.context.ApplicationScoped;
import javax.inject.Named;</simpara>
<simpara>/**
 *
 * @author Eric
 */
@Named
@ApplicationScoped
public class TrainerService {</simpara>
<literallayout class="monospaced">private final static String[] roles;
private final static String[] branches;
private final static String[] names;</literallayout>
<literallayout class="monospaced">static {
    roles = new String[4];
    roles[0] = "Abteilungsleiter";
    roles[1] = "Gruppenleiter";
    roles[2] = "Projektleiter";
    roles[3] = "Projektmitglied";</literallayout>
<literallayout class="monospaced">branches = new String[3];
branches[0] = "Development";
branches[1] = "Architecture";
branches[2] = "Design";</literallayout>
<literallayout class="monospaced">names = new String[10];
names[0] = "Max";
names[1] = "Peter";
names[2] = "Tim";
names[3] = "Tom";
names[4] = "Alex";
names[5] = "Josef";
names[6] = "Mr. Knolle";
names[7] = "BensiBoi";
names[8] = "Michael";
names[9] = "Martin";</literallayout>
<literallayout class="monospaced">}</literallayout>
<literallayout class="monospaced">public List&lt;Trainer&gt; createTrainers(int size) {
    List&lt;Trainer&gt; list = new ArrayList&lt;&gt;();
    for(int i = 0 ; i &lt; size ; i++) {
        list.add(new Trainer(getRandomName(), getRandomBranch(), getRandomRole()));
    }</literallayout>
<literallayout class="monospaced">    return list;
}</literallayout>
<literallayout class="monospaced">private String getRandomName() {
    return names[(int) (Math.random() * 10)];</literallayout>
<literallayout class="monospaced">}</literallayout>
<literallayout class="monospaced">private String getRandomRole() {
    return roles[(int) (Math.random() * 4)];
}</literallayout>
<literallayout class="monospaced">private String getRandomBranch() {
    return branches[(int) (Math.random() * 3)];
}</literallayout>
<literallayout class="monospaced">public List&lt;String&gt; getRoles() {
    return Arrays.asList(roles);
}</literallayout>
<literallayout class="monospaced">public List&lt;String&gt; getBranches() {
    return Arrays.asList(branches);
}</literallayout>
<literallayout class="monospaced">    public List&lt;String&gt; getNames() {
        return Arrays.asList(names);
    }
}</literallayout>
<screen>.TrainerView.java
[source,java]</screen>
<simpara>/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.game.trainee.trainerview;</simpara>
<simpara>import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;</simpara>
<simpara>/**
 *
 * @author Eric
 */
@Named
@ViewScoped
public class TrainerView implements Serializable {</simpara>
<literallayout class="monospaced">private List&lt;Trainer&gt; trainers;</literallayout>
<literallayout class="monospaced">private Trainer selectedTrainer;</literallayout>
<literallayout class="monospaced">@Inject
private TrainerService service;</literallayout>
<literallayout class="monospaced">@PostConstruct
public void init() {
    trainers = service.createTrainers(6);
}</literallayout>
<literallayout class="monospaced">public List&lt;Trainer&gt; getTrainers() {
    return trainers;
}</literallayout>
<literallayout class="monospaced">public void setService(TrainerService service) {
    this.service = service;
}</literallayout>
<literallayout class="monospaced">public Trainer getSelectedTrainer() {
    return selectedTrainer;
}</literallayout>
<literallayout class="monospaced">    public void setSelectedTrainer(Trainer selectedTrainer) {
        this.selectedTrainer = selectedTrainer;
    }
}</literallayout>
<screen>==== Trainee Classes</screen>
<formalpara>
<title>TraineeView.java</title>
<para>
<programlisting language="java" linenumbering="unnumbered">/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.game.trainee.traineeview;

import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;

/**
 *
 * @author Eric
 */
@Named
@ViewScoped
public class TraineeView implements Serializable {
    private List&lt;Trainee&gt; trainees;
    private Trainee selectedTrainee;

    @Inject
    private TraineeGenerator generator;

    @PostConstruct
    public void init() {
        trainees=generator.createTrainees(4);
    }

    public List&lt;Trainee&gt; getTrainees() {
        return trainees;
    }

    public void setSelectedTrainee(Trainee selectedTrainee) {
        this.selectedTrainee = selectedTrainee;
    }

    public void setGenerator(TraineeGenerator generator) {
        this.generator = generator;
    }

    public Trainee getSelectedTrainee() {
        return selectedTrainee;
    }



}</programlisting>
</para>
</formalpara>
<formalpara>
<title>TraineeGenerator.java</title>
<para>
<programlisting language="java" linenumbering="unnumbered">/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.game.trainee.traineeview;

import java.util.ArrayList;
import java.util.List;
import javax.enterprise.context.ApplicationScoped;
import javax.inject.Named;

/**
 *
 * @author Eric
 */
@Named
@ApplicationScoped
public class TraineeGenerator {

    private final List&lt;String&gt; names = new ArrayList&lt;&gt;();
    private final List&lt;String&gt; nicknames = new ArrayList&lt;&gt;();
    private final List&lt;String&gt; abteilungen = new ArrayList&lt;&gt;();
    private final List&lt;Double&gt; progress = new ArrayList&lt;&gt;();

    public TraineeGenerator() {
        names.add("Eric Haneder");
        names.add("Jan Binder");
        names.add("Alex Saliger");
        names.add("Alexander Wurst");

        nicknames.add("ericbensi");
        nicknames.add("Syreax");
        nicknames.add("SaAlexX");
        nicknames.add("Wursti");

        abteilungen.add("Management");
        abteilungen.add("Serverwartung");
        abteilungen.add("Softwaredevelopment ");
        abteilungen.add("Softwarearchitektur");

        progress.add(50.0);
        progress.add(80.0);
        progress.add(60.0);
        progress.add(30.0);
    }

    public List&lt;Trainee&gt; createTrainees(int size) {
        List&lt;Trainee&gt; list = new ArrayList&lt;&gt;();
        for(int i = 0 ; i &lt; size ; i++) {
            list.add(new Trainee(getNameFromIndex(i), getNicknameFromIndex(i), getAbteilungFromIndex(i), getProgressFromIndex(i)));
            list.get(i).embleme.add("javabeginner.png");
        }
        return list;
    }

    public String getNameFromIndex(int i) {
        return names.get(i);
    }
    public String getAbteilungFromIndex(int i) {
        return abteilungen.get(i);
    }
    public String getNicknameFromIndex(int i) {
        return nicknames.get(i);
    }
    public double getProgressFromIndex(int i) {
        return progress.get(i);
    }

    public List&lt;String&gt; getNames() {
        return names;
    }

    public List&lt;String&gt; getNicknames() {
        return nicknames;
    }

    public List&lt;String&gt; getAbteilungen() {
        return abteilungen;
    }

    public List&lt;Double&gt; getScores() {
        return progress;
    }

}</programlisting>
</para>
</formalpara>
</section>
<section xml:id="_quiz_classes">
<title>Quiz Classes</title>

</section>
</section>
</section>
</article>